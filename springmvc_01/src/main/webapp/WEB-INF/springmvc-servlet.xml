<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 启动注解扫描 -->
	<context:component-scan base-package="cn.edu.cuit">
	</context:component-scan>
	<!-- 视图解析器：完成Controller返回的字符串到哪里找那个 视图的问题 下面是我们实战中使用的最多的视图解析器：它实际上并不 完成视图解析，它会根据内容再决定调用别的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>
	<!-- 让mybatis的配置 -->
	<!-- 配置好数据源 ,替代MyBatis的配置文件 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3307/cuit"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean>
	<!-- 告诉Spring用这个类创建工厂，替代MyBatisUtil -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 因为Mybatis的配置文件作用创建DataSource，因 而这里配置dataSource属性即可 由于dataSource属性的类型是一 
			个接口，因而我们需要找一个实现类，实战中常用的有： 1 C3P0:https://www.mchange.com/projects/c3p0/ 2 
			Druid:https://github.com/alibaba/druid/wiki/%E5%B8%B8 %E8%A7%81%E9%97%AE%E9%A2%98 
			Druid是Java语言中最好的数据库连接池。Druid能够 提供强大的监控和扩展功能。 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 让Spring管理Mapper，我们编写好Mapper类后不需要 配置了 -->
	 <mybatis-spring:scan base-package="cn.edu.cuit.mapper" /> 
	
	<!-- 事务是重复代码，配置重复代码类 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource" />
	</bean>
	
	
	<mvc:resources location="/WEB-INF/static/" mapping="/static/**"></mvc:resources>
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- 启动注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>